// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eco_tourism_weather.DB;

#nullable disable

namespace eco_tourism_weather.Migrations
{
    [DbContext(typeof(EcoTourismWeatherContext))]
    partial class EcoTourismWeatherContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("eco_tourism_weather.Models.WeatherInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cloud")
                        .HasColumnType("int");

                    b.Property<int>("ConditionCode")
                        .HasColumnType("int");

                    b.Property<string>("ConditionIcon")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ConditionText")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("FeelslikeC")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("FeelslikeF")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("GustKph")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("GustMph")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("HeatindexC")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Humidity")
                        .HasColumnType("int");

                    b.Property<bool>("IsDay")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("LastUpdatedEpoch")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("Localtime")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("LocaltimeEpoch")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("PrecipMm")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("TempC")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TempF")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("TzId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("UV")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("VisKm")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("WindDegree")
                        .HasColumnType("int");

                    b.Property<decimal>("WindKph")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("WindMph")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("WindchillC")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("WindchillF")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("eco_tourism_tourist_WeatherInfo", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
